@model ProductPageViewModel

<link href="~/css/productIndex.css" rel="stylesheet" />

@{
    ViewBag.Title = "Products";

    var currentCategoryId = ViewBag.SelectedCategoryId as int?;
    var queryParams = new Dictionary<string, string>();
    if (currentCategoryId.HasValue && currentCategoryId.Value > 0)
    {
        queryParams["categoryId"] = currentCategoryId.Value.ToString();
    }
}

<div class="row justify-content-center mb-4">
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="d-flex align-items-center">
            <label for="categoryId" class="form-label me-2 mb-0">Category:</label>
            <select name="categoryId" id="categoryId" asp-items="ViewBag.Categories" class="form-select me-2">
                <option value="">All</option>
            </select>
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>
</div>

<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Products</h1>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <a class="btn btn-primary" asp-action="Add">Add Product</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Products.First().ImageUrls)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Products.First().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Products.First().Description)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Products.First().Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Products.First().CreatedOn)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.Products)
                        {
                            <tr>
                                <td>
                                    <div id="carouselExampleIndicators_@product.Id" class="carousel slide" data-bs-ride="carousel">
                                        <div class="carousel-inner">
                                            @if (product.ImageUrls != null && product.ImageUrls.Any())
                                            {
                                                for (int i = 0; i < product.ImageUrls.Count; i++)
                                                {
                                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                                        <img src="@product.ImageUrls[i]" class="d-block" style="height: 200px;" alt="Destination Image">
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="carousel-item active">
                                                    <img src="~/images/NoPhoto.jpg" class="d-block w-100" style="height: 200px; object-fit: cover;" alt="Placeholder Image">
                                                </div>
                                            }
                                        </div>
                                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators_@product.Id" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Previous</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators_@product.Id" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Next</span>
                                        </button>
                                    </div>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => product.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => product.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => product.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => product.CreatedOn)
                                </td>
                                <td>
                                    <a class="btn btn-sm btn-warning me-2" asp-action="Edit" asp-route-id="@product.Id">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                    <a class="btn btn-sm btn-info me-2" asp-action="Details" asp-route-id="@product.Id">
                                        <i class="bi bi-info-circle"></i> Details
                                    </a>
                                    <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@product.Id">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-searchTerm="@ViewBag.SearchTerm">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-searchTerm="@ViewBag.SearchTerm">@i</a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-searchTerm="@ViewBag.SearchTerm">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}